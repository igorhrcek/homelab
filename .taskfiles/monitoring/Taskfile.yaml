version: '3'

tasks:
  generate-dashboards:
    desc: Convert JSON dashboards to Kubernetes ConfigMaps and generate kustomization.yaml
    vars:
      DASHBOARDS_DIR: dashboards
      OUTPUT_DIR: kubernetes/apps/monitoring/grafana/dashboards
    cmds:
      # Clean the output directory
      - rm -rf {{.OUTPUT_DIR}}/*

      # Create the output directory if it doesn't exist
      - mkdir -p {{.OUTPUT_DIR}}

      # Debug: List JSON files
      - echo "Looking for JSON files in {{.DASHBOARDS_DIR}}..."
      - ls -la {{.DASHBOARDS_DIR}}/*.json || echo "No JSON files found in {{.DASHBOARDS_DIR}}"

      # Convert each JSON file to a ConfigMap YAML using a shell script
      - |
        #!/bin/bash
        set -e

        DASHBOARDS_DIR="{{.DASHBOARDS_DIR}}"
        OUTPUT_DIR="{{.OUTPUT_DIR}}"

        echo "Converting dashboards from $DASHBOARDS_DIR to $OUTPUT_DIR"

        # Check if dashboard directory exists
        if [ ! -d "$DASHBOARDS_DIR" ]; then
          echo "Error: Dashboard directory $DASHBOARDS_DIR does not exist"
          exit 1
        fi

        # Convert each JSON file
        for json_file in "$DASHBOARDS_DIR"/*.json; do
          # Check if glob matches any files
          if [ ! -f "$json_file" ]; then
            echo "No JSON files found in $DASHBOARDS_DIR"
            break
          fi

          # Extract filename without extension
          basename_file=$(basename "$json_file" .json)

          echo "Processing: $json_file -> ${basename_file}.yaml"

          # Create the ConfigMap YAML
          cat > "$OUTPUT_DIR/${basename_file}.yaml" << EOF
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: ${basename_file}
          namespace: monitoring
          labels:
            grafana_dashboard: "1"
        data:
          ${basename_file}.json: |-
        EOF

          # Add the JSON content with proper indentation
          sed 's/^/    /' "$json_file" >> "$OUTPUT_DIR/${basename_file}.yaml"

          echo "Created ConfigMap: ${basename_file}.yaml"
        done

      # Generate kustomization.yaml
      - |
        #!/bin/bash
        set -e

        OUTPUT_DIR="{{.OUTPUT_DIR}}"
        KUSTOMIZATION_FILE="$OUTPUT_DIR/kustomization.yaml"

        echo "Generating kustomization.yaml..."

        # Create the base kustomization.yaml
        cat > "$KUSTOMIZATION_FILE" << EOF
        apiVersion: kustomize.config.k8s.io/v1beta1
        kind: Kustomization

        resources:
        EOF

        # Add all YAML files (except kustomization.yaml) to resources
        found_files=false
        for yaml_file in "$OUTPUT_DIR"/*.yaml; do
          if [ -f "$yaml_file" ] && [ "$(basename "$yaml_file")" != "kustomization.yaml" ]; then
            echo "- $(basename "$yaml_file")" >> "$KUSTOMIZATION_FILE"
            echo "Added to kustomization: $(basename "$yaml_file")"
            found_files=true
          fi
        done

        if [ "$found_files" = false ]; then
          echo "Warning: No YAML files found to add to kustomization.yaml"
        else
          echo "Generated kustomization.yaml successfully"
        fi

    silent: true

  generate-alerts:
    desc: Convert alert files to VictoriaMetrics VMRule resources and generate kustomization.yaml
    vars:
      ALERTS_DIR: alerts
      OUTPUT_DIR: kubernetes/apps/monitoring/victoriametrics/alerts
    cmds:
      # Run the Python conversion script
      - python3 .taskfiles/monitoring/convert_alerts.py --input-dir {{.ALERTS_DIR}} --output-dir {{.OUTPUT_DIR}} --clean
    silent: true
