---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/refs/heads/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name librechat
  namespace: librechat

spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  install:
    timeout: 10m
    replace: true
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3

  upgrade:
    remediation:
      remediateLastFailure: true
      retries: 3
      strategy: rollback
    cleanupOnFail: true
    crds: CreateReplace

  test:
    enable: true

  rollback:
    recreate: true
    force: true
    cleanupOnFail: true

  uninstall:
    keepHistory: false

  maxHistory: 1

  values:
    controllers:
      librechat:
        type: deployment
        replicas: 2
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
          secret.reloader.stakater.com/reload: &secret librechat-secret
        containers:
          app:
            image:
              repository: ghcr.io/danny-avila/lc-dev
              tag: e8ddd279fd0a170469de554d67e647d1cc2474e3@sha256:2a95647f015563e46b74d9280405c2b68f4aabc49a4b4ead439d1c90c486cfac
            env: &env
              ENDPOINTS: "agents,assistants,custom"
              PORT: "3080"
              RAG_PORT: "8080"
              NODE_ENV: "development"

              SEARCH: "true"

              ALLOW_EMAIL_LOGIN: "false"
              ALLOW_REGISTRATION: "false"
              ALLOW_SOCIAL_LOGIN: "true"
              ALLOW_SOCIAL_REGISTRATION: "true"
              ALLOW_PASSWORD_RESET: "false"
              ALLOW_UNVERIFIED_EMAIL_LOGIN: "false"

              USE_REDIS: true
              REDIS_URI: redis://redis-librechat.database.svc.cluster.local:6379

              S3_URL_EXPIRY_SECONDS: 3600 # 1 hour

            dependsOn:
              - ragapi

            envFrom: &envFrom
              - secretRef:
                  name: *secret
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities:
                drop:
                  - "ALL"
              runAsUser: 1000
              runAsGroup: 1000
              fsGroup: 1000
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1000Mi
            probes:
              liveness: &librechatProbe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 3080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *librechatProbe
          exporter:
            image:
              repository: ghcr.io/virtuos/librechat_exporter
              tag: main
            ports:
              - name: metrics
                containerPort: &metricsPort 8000
            env:
              - name: MONGODB_URI
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: MONGO_URI
              - name: LOGGING_LEVEL
                value: info
              - name: MONGODB_DATABASE
                value: librechat
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - "ALL"

          ragapi:
            image:
              repository: ghcr.io/danny-avila/librechat-rag-api-dev-lite
              tag: latest@sha256:f62a736ae997dc45029e93e785d0a306f4fbd685fece305950c1169e38db0dc7
            envFrom: *envFrom
            env: *env
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - "ALL"
            probes:
              liveness: &ragapiProbe
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *ragapiProbe

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault

    service:
      app:
        controller: librechat
        ports:
          http:
            port: &port 3080
          metrics:
            port: *metricsPort

    persistence:
      config:
        enabled: true
        type: configMap
        name: librechat-config
        advancedMounts:
          librechat:
            app:
              - subPath: librechat.yaml
                path: /app/librechat.yaml

      app-data:
        enabled: true
        type: emptyDir
        advancedMounts:
          librechat:
            app:
              - path: /app/data
              - path: /app/api/data

      tmp:
        enabled: true
        type: emptyDir
        globalMounts:
          - path: /tmp

      data:
        enabled: true
        type: emptyDir
        advancedMounts:
          librechat:
            app:
              - subPath: logs
                path: /app/api/logs
              - subPath: images
                path: /app/client/public/images
              - subPath: uploads
                path: /app/uploads
            ragapi:
              - subPath: ragapi
                path: /app/uploads

    serviceMonitor:
      app:
        serviceName: librechat
        endpoints:
          - port: metrics
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 30s
